"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5571],{23445:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>i,metadata:()=>d,toc:()=>h});var a=n(74848),s=n(28453);const i={title:"Backend"},l=void 0,d={id:"api-specification/Backend",title:"Backend",description:"mafia-game-server",source:"@site/docs/api-specification/Backend.md",sourceDirName:"api-specification",slug:"/api-specification/Backend",permalink:"/applebaum-final-projects-mafia-uhh/docs/api-specification/Backend",draft:!1,unlisted:!1,editUrl:"https://github.com/cis3296f24/applebaum-final-projects-mafia-uhh/edit/main/documentation/docs/api-specification/Backend.md",tags:[],version:"current",lastUpdatedBy:"JohnDaang",frontMatter:{title:"Backend"},sidebar:"docsSidebar",previous:{title:"CalculatorModel.java",permalink:"/applebaum-final-projects-mafia-uhh/docs/api-specification/calculator-model-generated"},next:{title:"Frontend",permalink:"/applebaum-final-projects-mafia-uhh/docs/api-specification/Frontend"}},c={},h=[{value:"mafia-game-server",id:"mafia-game-server",level:2},{value:"mafia-game-server~checkPlayerNameValid(playerName, ws) \u21d2 <code>boolean</code>",id:"mafia-game-servercheckplayernamevalidplayername-ws--boolean",level:3},{value:"mafia-game-server~beginDayTimer()",id:"mafia-game-serverbegindaytimer",level:3},{value:"mafia-game-server~beginNightTimer()",id:"mafia-game-serverbeginnighttimer",level:3},{value:"mafia-game-server~doPhaseChange()",id:"mafia-game-serverdophasechange",level:3},{value:"mafia-game-server~updateCurrentPlayersList()",id:"mafia-game-serverupdatecurrentplayerslist",level:3},{value:"mafia-game-server~checkWinConditions() \u21d2 <code>boolean</code>",id:"mafia-game-servercheckwinconditions--boolean",level:3},{value:"mafia-game-server~isMafia(role) \u21d2 <code>boolean</code>",id:"mafia-game-serverismafiarole--boolean",level:3},{value:"mafia-game-server~kickExcessPlayers(maxPlayers)",id:"mafia-game-serverkickexcessplayersmaxplayers",level:3},{value:"mafia-game-server~assignRoles(players, maxPlayers, numMafia)",id:"mafia-game-serverassignrolesplayers-maxplayers-nummafia",level:3},{value:"mafia-game-server~generateRoles(maxPlayers, numMafia) \u21d2 <code>Array</code>",id:"mafia-game-servergeneraterolesmaxplayers-nummafia--array",level:3},{value:"mafia-game-server~handleVoting(playerName, targetPlayer)",id:"mafia-game-serverhandlevotingplayername-targetplayer",level:3},{value:"Constants",id:"constants",level:2},{value:"Typedefs",id:"typedefs",level:2},{value:"roles : <code>Array.&lt;Role&gt;</code>",id:"roles--arrayrole",level:2},{value:"roleDesc : <code>Array.&lt;RoleDescription&gt;</code>",id:"roledesc--arrayroledescription",level:2},{value:"Role : <code>Object</code>",id:"role--object",level:2},{value:"RoleDescription : <code>Object</code>",id:"roledescription--object",level:2},{value:"Player",id:"player",level:2},{value:"new Player(name, role)",id:"new-playername-role",level:3},{value:"player.name : <code>string</code>",id:"playername--string",level:3},{value:"player.role : <code>string</code>",id:"playerrole--string",level:3},{value:"player.eliminated : <code>boolean</code>",id:"playereliminated--boolean",level:3},{value:"player.hasVoted : <code>boolean</code>",id:"playerhasvoted--boolean",level:3},{value:"player.targetVote : <code>Player</code> | <code>null</code>",id:"playertargetvote--player--null",level:3},{value:"player.ability : <code>string</code> | <code>null</code>",id:"playerability--string--null",level:3},{value:"player.team : <code>string</code> | <code>null</code>",id:"playerteam--string--null",level:3},{value:"player.voteFor(player)",id:"playervoteforplayer",level:3},{value:"player.resetVote()",id:"playerresetvote",level:3},{value:"player.eliminate()",id:"playereliminate",level:3}];function t(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("a",{name:"module_mafia-game-server"}),"\n",(0,a.jsx)(r.h2,{id:"mafia-game-server",children:"mafia-game-server"}),"\n",(0,a.jsxs)(r.p,{children:["This module contains the server logic for a Mafia game implemented using Express.js, WebSockets (via the ",(0,a.jsx)(r.code,{children:"ws"})," library), and custom player objects.\nThe game supports multiple players, role assignments, timers for day/night phases, voting mechanisms, and connection/disconnection handling."]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:"mafia-game-server"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#module_mafia-game-server..checkPlayerNameValid",children:"~checkPlayerNameValid(playerName, ws)"})," \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..beginDayTimer",children:"~beginDayTimer()"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..beginNightTimer",children:"~beginNightTimer()"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..doPhaseChange",children:"~doPhaseChange()"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..updateCurrentPlayersList",children:"~updateCurrentPlayersList()"})}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#module_mafia-game-server..checkWinConditions",children:"~checkWinConditions()"})," \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#module_mafia-game-server..isMafia",children:"~isMafia(role)"})," \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..kickExcessPlayers",children:"~kickExcessPlayers(maxPlayers)"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..assignRoles",children:"~assignRoles(players, maxPlayers, numMafia)"})}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#module_mafia-game-server..generateRoles",children:"~generateRoles(maxPlayers, numMafia)"})," \u21d2 ",(0,a.jsx)("code",{children:"Array"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#module_mafia-game-server..handleVoting",children:"~handleVoting(playerName, targetPlayer)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..checkPlayerNameValid"}),"\n",(0,a.jsxs)(r.h3,{id:"mafia-game-servercheckplayernamevalidplayername-ws--boolean",children:["mafia-game-server~checkPlayerNameValid(playerName, ws) \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.p,{children:"Validates if the player's name is unique and meets the length criteria."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Returns"}),": ",(0,a.jsx)("code",{children:"boolean"})," - - Returns ",(0,a.jsx)(r.code,{children:"true"})," if the player name is valid, ",(0,a.jsx)(r.code,{children:"false"})," otherwise."]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"playerName"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The player's input name"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"ws"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"WebSocket"})}),(0,a.jsx)(r.td,{children:"The WebSocket connection object"})]})]})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..beginDayTimer"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverbegindaytimer",children:"mafia-game-server~beginDayTimer()"}),"\n",(0,a.jsx)(r.p,{children:"Starts the day timer and broadcasts the time remaining to all players."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..beginNightTimer"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverbeginnighttimer",children:"mafia-game-server~beginNightTimer()"}),"\n",(0,a.jsx)(r.p,{children:"Starts the night timer and broadcasts the time remaining to all players."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..doPhaseChange"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverdophasechange",children:"mafia-game-server~doPhaseChange()"}),"\n",(0,a.jsx)(r.p,{children:"Changes the game phase between DAY and NIGHT."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..updateCurrentPlayersList"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverupdatecurrentplayerslist",children:"mafia-game-server~updateCurrentPlayersList()"}),"\n",(0,a.jsx)(r.p,{children:"Sends the updated list of current players to all connected clients."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..checkWinConditions"}),"\n",(0,a.jsxs)(r.h3,{id:"mafia-game-servercheckwinconditions--boolean",children:["mafia-game-server~checkWinConditions() \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.p,{children:"Checks if a team has won the game based on the current player status."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Returns"}),": ",(0,a.jsx)("code",{children:"boolean"})," - - Returns ",(0,a.jsx)(r.code,{children:"true"})," if a team has won, ",(0,a.jsx)(r.code,{children:"false"})," otherwise."]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..isMafia"}),"\n",(0,a.jsxs)(r.h3,{id:"mafia-game-serverismafiarole--boolean",children:["mafia-game-server~isMafia(role) \u21d2 ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.p,{children:"Helper function to check if a role is part of the Mafia team."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Returns"}),": ",(0,a.jsx)("code",{children:"boolean"})," - - Returns ",(0,a.jsx)(r.code,{children:"true"})," if the role is Mafia, ",(0,a.jsx)(r.code,{children:"false"})," otherwise."]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"role"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The role to check"})]})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..kickExcessPlayers"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverkickexcessplayersmaxplayers",children:"mafia-game-server~kickExcessPlayers(maxPlayers)"}),"\n",(0,a.jsx)(r.p,{children:"Removes excess players if the player count exceeds the max allowed."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"maxPlayers"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"number"})}),(0,a.jsx)(r.td,{children:"The maximum allowed number of players"})]})})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..assignRoles"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverassignrolesplayers-maxplayers-nummafia",children:"mafia-game-server~assignRoles(players, maxPlayers, numMafia)"}),"\n",(0,a.jsx)(r.p,{children:"Assigns roles to players based on the number of players and Mafia count."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"players"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"Array"})}),(0,a.jsx)(r.td,{children:"The array of players"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"maxPlayers"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"number"})}),(0,a.jsx)(r.td,{children:"The maximum number of players"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"numMafia"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"number"})}),(0,a.jsx)(r.td,{children:"The number of Mafia players"})]})]})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..generateRoles"}),"\n",(0,a.jsxs)(r.h3,{id:"mafia-game-servergeneraterolesmaxplayers-nummafia--array",children:["mafia-game-server~generateRoles(maxPlayers, numMafia) \u21d2 ",(0,a.jsx)("code",{children:"Array"})]}),"\n",(0,a.jsx)(r.p,{children:"Generates a shuffled list of roles based on the number of players and Mafia count."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})}),(0,a.jsx)(r.br,{}),"\n",(0,a.jsx)(r.strong,{children:"Returns"}),": ",(0,a.jsx)("code",{children:"Array"})," - - The shuffled array of roles"]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"maxPlayers"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"number"})}),(0,a.jsx)(r.td,{children:"The maximum number of players"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"numMafia"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"number"})}),(0,a.jsx)(r.td,{children:"The number of Mafia players"})]})]})]}),"\n",(0,a.jsx)("a",{name:"module_mafia-game-server..handleVoting"}),"\n",(0,a.jsx)(r.h3,{id:"mafia-game-serverhandlevotingplayername-targetplayer",children:"mafia-game-server~handleVoting(playerName, targetPlayer)"}),"\n",(0,a.jsx)(r.p,{children:"Handles voting logic when a player votes for another player."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": inner method of ",(0,a.jsx)(r.a,{href:"#module_mafia-game-server",children:(0,a.jsx)("code",{children:"mafia-game-server"})})]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"playerName"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The name of the player who is voting"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"targetPlayer"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The name of the player being voted for"})]})]})]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)(r.h2,{id:"constants",children:"Constants"}),"\n",(0,a.jsxs)("dl",{children:[(0,a.jsxs)("dt",{children:[(0,a.jsx)("a",{href:"#roles",children:"roles"})," : ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"#Role",children:"Array.<Role>"})})]}),(0,a.jsx)("dd",{children:(0,a.jsx)("p",{children:"Array containing the roles in the game, such as Mafia and Citizen. The roles are distributed among players based on the number of players."})}),(0,a.jsxs)("dt",{children:[(0,a.jsx)("a",{href:"#roleDesc",children:"roleDesc"})," : ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"#RoleDescription",children:"Array.<RoleDescription>"})})]}),(0,a.jsx)("dd",{children:(0,a.jsx)("p",{children:"Array of role descriptions, where each entry describes a specific role and its objective in the game."})})]}),"\n",(0,a.jsx)(r.h2,{id:"typedefs",children:"Typedefs"}),"\n",(0,a.jsxs)("dl",{children:[(0,a.jsxs)("dt",{children:[(0,a.jsx)("a",{href:"#Role",children:"Role"})," : ",(0,a.jsx)("code",{children:"Object"})]}),(0,a.jsx)("dd",{children:(0,a.jsx)("p",{children:"Array of role objects representing the different roles in the game."})}),(0,a.jsxs)("dt",{children:[(0,a.jsx)("a",{href:"#RoleDescription",children:"RoleDescription"})," : ",(0,a.jsx)("code",{children:"Object"})]}),(0,a.jsx)("dd",{children:(0,a.jsx)("p",{children:"Array containing descriptions of the roles in the game. Descriptions provide context and instructions for each role."})})]}),"\n",(0,a.jsx)("a",{name:"roles"}),"\n",(0,a.jsxs)(r.h2,{id:"roles--arrayrole",children:["roles : ",(0,a.jsx)(r.a,{href:"#Role",children:(0,a.jsx)("code",{children:"Array.<Role>"})})]}),"\n",(0,a.jsx)(r.p,{children:"Array containing the roles in the game, such as Mafia and Citizen.\nThe roles are distributed among players based on the number of players."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": global constant"]}),"\n",(0,a.jsx)("a",{name:"roleDesc"}),"\n",(0,a.jsxs)(r.h2,{id:"roledesc--arrayroledescription",children:["roleDesc : ",(0,a.jsx)(r.a,{href:"#RoleDescription",children:(0,a.jsx)("code",{children:"Array.<RoleDescription>"})})]}),"\n",(0,a.jsx)(r.p,{children:"Array of role descriptions, where each entry describes a specific role and its objective in the game."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": global constant"]}),"\n",(0,a.jsx)("a",{name:"Role"}),"\n",(0,a.jsxs)(r.h2,{id:"role--object",children:["Role : ",(0,a.jsx)("code",{children:"Object"})]}),"\n",(0,a.jsx)(r.p,{children:"Array of role objects representing the different roles in the game."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": global typedef"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Properties"})}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Name"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"name"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The name of the role."})]})})]}),"\n",(0,a.jsx)("a",{name:"RoleDescription"}),"\n",(0,a.jsxs)(r.h2,{id:"roledescription--object",children:["RoleDescription : ",(0,a.jsx)("code",{children:"Object"})]}),"\n",(0,a.jsx)(r.p,{children:"Array containing descriptions of the roles in the game. Descriptions provide context and instructions for each role."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": global typedef"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Properties"})}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Name"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"name"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The name of the role."})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"description"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"A brief explanation of the role's objective and behavior."})]})]})]}),"\n",(0,a.jsx)(r.hr,{}),"\n",(0,a.jsx)("a",{name:"Player"}),"\n",(0,a.jsx)(r.h2,{id:"player",children:"Player"}),"\n",(0,a.jsx)(r.p,{children:"Class representing a player in the game.\nEach player has a name, role, and additional properties for voting and elimination."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": global class"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player",children:"Player"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#new_Player_new",children:"new Player(name, role)"})}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+name",children:".name"})," : ",(0,a.jsx)("code",{children:"string"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+role",children:".role"})," : ",(0,a.jsx)("code",{children:"string"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+eliminated",children:".eliminated"})," : ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+hasVoted",children:".hasVoted"})," : ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+targetVote",children:".targetVote"})," : ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+ability",children:".ability"})," : ",(0,a.jsx)("code",{children:"string"})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#Player+team",children:".team"})," : ",(0,a.jsx)("code",{children:"string"})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#Player+voteFor",children:".voteFor(player)"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#Player+resetVote",children:".resetVote()"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#Player+eliminate",children:".eliminate()"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("a",{name:"new_Player_new"}),"\n",(0,a.jsx)(r.h3,{id:"new-playername-role",children:"new Player(name, role)"}),"\n",(0,a.jsx)(r.p,{children:"Creates an instance of the Player class."}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"name"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The name of the player."})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"role"}),(0,a.jsx)(r.td,{children:(0,a.jsx)("code",{children:"string"})}),(0,a.jsx)(r.td,{children:"The role assigned to the player (e.g., Mafia, Citizen)."})]})]})]}),"\n",(0,a.jsx)("a",{name:"Player+name"}),"\n",(0,a.jsxs)(r.h3,{id:"playername--string",children:["player.name : ",(0,a.jsx)("code",{children:"string"})]}),"\n",(0,a.jsx)(r.p,{children:"The player's name."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+role"}),"\n",(0,a.jsxs)(r.h3,{id:"playerrole--string",children:["player.role : ",(0,a.jsx)("code",{children:"string"})]}),"\n",(0,a.jsx)(r.p,{children:"The role of the player (e.g., Mafia, Citizen)."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+eliminated"}),"\n",(0,a.jsxs)(r.h3,{id:"playereliminated--boolean",children:["player.eliminated : ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.p,{children:"The player's status (whether they are eliminated or not)."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+hasVoted"}),"\n",(0,a.jsxs)(r.h3,{id:"playerhasvoted--boolean",children:["player.hasVoted : ",(0,a.jsx)("code",{children:"boolean"})]}),"\n",(0,a.jsx)(r.p,{children:"Flag indicating if the player has voted."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+targetVote"}),"\n",(0,a.jsxs)(r.h3,{id:"playertargetvote--player--null",children:["player.targetVote : ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsx)(r.p,{children:"The player that the current player has voted for."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+ability"}),"\n",(0,a.jsxs)(r.h3,{id:"playerability--string--null",children:["player.ability : ",(0,a.jsx)("code",{children:"string"})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsx)(r.p,{children:"The ability associated with the player's role (if any).\nThis can be used in the future for nighttime phase actions."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+team"}),"\n",(0,a.jsxs)(r.h3,{id:"playerteam--string--null",children:["player.team : ",(0,a.jsx)("code",{children:"string"})," | ",(0,a.jsx)("code",{children:"null"})]}),"\n",(0,a.jsx)(r.p,{children:"The team the player belongs to (e.g., Mafia team, Citizen team)."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+voteFor"}),"\n",(0,a.jsx)(r.h3,{id:"playervoteforplayer",children:"player.voteFor(player)"}),"\n",(0,a.jsx)(r.p,{children:"Allows the player to vote for another player.\nOnce the vote is cast, the player can no longer change their vote."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Param"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:"player"}),(0,a.jsx)(r.td,{children:(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})}),(0,a.jsx)(r.td,{children:"The player that the current player is voting for."})]})})]}),"\n",(0,a.jsx)("a",{name:"Player+resetVote"}),"\n",(0,a.jsx)(r.h3,{id:"playerresetvote",children:"player.resetVote()"}),"\n",(0,a.jsx)(r.p,{children:"Resets the player's vote, allowing them to vote again.\nThis is useful for scenarios where the player's vote is voided."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]}),"\n",(0,a.jsx)("a",{name:"Player+eliminate"}),"\n",(0,a.jsx)(r.h3,{id:"playereliminate",children:"player.eliminate()"}),"\n",(0,a.jsx)(r.p,{children:"Eliminates the player from the game, changing their status to eliminated.\nThis is typically used when a player is voted out or otherwise removed."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,a.jsx)(r.a,{href:"#Player",children:(0,a.jsx)("code",{children:"Player"})})]})]})}function o(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>d});var a=n(96540);const s={},i=a.createContext(s);function l(e){const r=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:r},e.children)}}}]);